example:1+3*2

//CurTok is tok_numer, NumVal is 1
auto LHS = ParsePrimary(); //LHS is NumberExprAST of 1, getNextToken()=>CurTok is +
ParseBinOpRHS(ExprPrec=0, LHS); //Maybe ExprPrec should be renamed to PrevTokPrecPlus
->
int TokPrec = GetTokPrecedence(); //TokPrec is 20(+)
if (TokPrec < ExprPrec) return LHS; //go to 6. this ParseBinOpRHS is allowed to "eat"(eat means to backup CurTok as BinOp and move CurTok forward by parsing next number) Token with precedence more than ExprPrec=0. If TokPrec falls below, do not do anything.
  //if ParseBinOpRHS is not allowed to eat, 
int BinOp = CurTok = +;
getNextToken(); //eat token! set next token, CurTok=tok_number, NumVal=3
auto RHS = ParsePrimary(); //same as line 5. RHS is NumberExprAST of 3, getNextToken()=>CurTok is *
if (!RHS) return nullptr; 
int NextPrec = GetTokPrecedence(); //NextPrec=40(*)
if (TokPrec < NextPrec) { //Yes, 20<41 NextPrec has higher precedence;
    RHS = ParseBinOpRHS(TokPrec+1, RHS); 
-->ExprPrec=20+1=21, RHS is NumberExprAST of 3
int TokPrec = GetTokPrecedence(); //TokPrec=40(*)
if (TokPrec < ExprPrec) return LHS; //NO, 40<21; go ahead
...
<--
    if (!RHS) return nullptr;
  }
  LHS = BinExprAst of BinOp, LHS, and RHS 
  //go to line 8
<-
